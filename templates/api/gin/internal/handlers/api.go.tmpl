package handlers

import (
	"net/http"
	
	{{if eq .DatabaseType "postgresql" -}}
	"database/sql"
	{{- end}}
	
	"github.com/gin-gonic/gin"
	
	"{{.ModulePath}}/internal/config"
	{{if (call .HasFeature "automatic-versioning") -}}
	"{{.ModulePath}}/internal/version"
	{{- end}}
)

// APIHandler handles API requests
type APIHandler struct {
	{{if eq .DatabaseType "postgresql" -}}
	DB  *sql.DB
	{{- end}}
	Cfg *config.Config
}

// NewAPIHandler creates a new API handler
func NewAPIHandler({{if eq .DatabaseType "postgresql"}}db *sql.DB, {{end}}cfg *config.Config) *APIHandler {
	return &APIHandler{
		{{if eq .DatabaseType "postgresql" -}}
		DB:  db,
		{{- end}}
		Cfg: cfg,
	}
}

// HealthCheck handles health check requests
func (h *APIHandler) HealthCheck(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{
		"status": "ok",
		"environment": h.Cfg.Env,
	})
}

{{if (call .HasFeature "automatic-versioning") -}}
// Status returns version and build information
func (h *APIHandler) Status(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{
		"version": version.Version,
		"build":   version.BuildID,
	})
}
{{- end}}
