package auth

import (
	"crypto/subtle"
	"net/http"
)

// BasicAuthMiddleware provides HTTP Basic Authentication
func BasicAuthMiddleware(username, password string, realm string) func(http.Handler) http.Handler {
	return func(next http.Handler) http.Handler {
		return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
			// Get credentials from request
			user, pass, ok := r.BasicAuth()
			
			// Check credentials
			if !ok || subtle.ConstantTimeCompare([]byte(user), []byte(username)) != 1 || 
			   subtle.ConstantTimeCompare([]byte(pass), []byte(password)) != 1 {
				   
				w.Header().Set("WWW-Authenticate", `Basic realm="`+realm+`"`)
				w.WriteHeader(http.StatusUnauthorized)
				w.Write([]byte("Unauthorized"))
				return
			}
			
			// Call the next handler
			next.ServeHTTP(w, r)
		})
	}
}
