{{define "content"}}
<div class="users-page">
    <h2>{{.Title}}</h2>
    
    <table class="users-table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Email</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            {{range .Users}}
            <tr>
                <td>{{.ID}}</td>
                <td>{{.Name}}</td>
                <td>{{.Email}}</td>
                <td>
                    <a href="/users/{{.ID}}" class="btn small">View</a>
                    <button class="btn small danger delete-user" data-id="{{.ID}}">Delete</button>
                </td>
            </tr>
            {{end}}
        </tbody>
    </table>
    
    <div class="user-form-container">
        <h3>Add New User</h3>
        <form id="new-user-form" class="user-form">
            <div class="form-group">
                <label for="name">Name</label>
                <input type="text" id="name" name="name" required>
            </div>
            
            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" required>
            </div>
            
            <div class="form-group">
                <button type="submit" class="btn primary">Add User</button>
            </div>
        </form>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Handle new user form submission
    const form = document.getElementById('new-user-form');
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const name = document.getElementById('name').value;
        const email = document.getElementById('email').value;
        
        fetch('/users', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ name, email })
        })
        .then(response => response.json())
        .then(data => {
            alert('User created successfully!');
            window.location.reload();
        })
        .catch(error => {
            alert('Error creating user: ' + error);
        });
    });
    
    // Handle delete buttons
    const deleteButtons = document.querySelectorAll('.delete-user');
    deleteButtons.forEach(button => {
        button.addEventListener('click', function() {
            const id = this.getAttribute('data-id');
            
            if (confirm('Are you sure you want to delete this user?')) {
                fetch('/users/' + id, {
                    method: 'DELETE'
                })
                .then(response => {
                    if (response.status === 204) {
                        alert('User deleted successfully!');
                        window.location.reload();
                    } else {
                        throw new Error('Failed to delete user');
                    }
                })
                .catch(error => {
                    alert('Error deleting user: ' + error);
                });
            }
        });
    });
});
</script>
{{end}}
